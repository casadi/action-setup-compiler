name: 'Set up compiler'
description: 'Setup compiler.'

inputs:
  cache-suffix:
    description: 'Cannot have a common cache within one workflow'
    required: true
  target:
    description: 'Target'
    default: x86_64
    required: false

runs:
  using: "composite"
  steps:
      - name: Cache build dir
        uses: actions/cache@v4.0.2
        id: compiler-cache
        with:
          key: setup-compiler-v3-${{inputs.cache-suffix}}
          path: |
            /usr/local/miniconda/envs
      - uses: conda-incubator/setup-miniconda@v3.0.4
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: anaconda, conda-forge
          activate-environment: compiler
          conda-solver: classic
      - run: |
             # https://stackoverflow.com/questions/69236331/conda-macos-big-sur-ld-unsupported-tapi-file-type-tapi-tbd-in-yaml-file
             wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.13.sdk.tar.xz
             sudo tar xf MacOSX10.13.sdk.tar.xz -C /opt
             
             conda install -y -c conda-forge c-compiler==1.1.1 cxx-compiler==1.1.1 fortran-compiler==1.1.1
             
             echo "SDKROOT=/opt/MacOSX10.13.sdk" >> $GITHUB_ENV
             echo "CONDA_BUILD_SYSROOT=/opt/MacOSX10.13.sdk" >> $GITHUB_ENV
             echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV
        if: steps.compiler-cache.outputs.cache-hit != 'true' && inputs.target == 'x86_64'
        shell: bash -el {0}
      - run: |
             wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.0-11.1/MacOSX11.1.sdk.tar.xz
             sudo tar xf MacOSX11.1.sdk.tar.xz -C /opt
             
             conda install -y -c conda-forge c-compiler==1.6.0 cxx-compiler==1.6.0 fortran-compiler==1.6.0 # was 1.5.2
             
             echo "SDKROOT=/opt/MacOSX11.1.sdk" >> $GITHUB_ENV
             echo "CONDA_BUILD_SYSROOT=/opt/MacOSX11.1.sdk" >> $GITHUB_ENV
             echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
        if: steps.compiler-cache.outputs.cache-hit != 'true' && inputs.target == 'arm64'
        shell: bash -el {0}
      - run: |
             echo "CC=$CONDA_PREFIX/bin/clang" >> $GITHUB_ENV
             echo "CXX=$CONDA_PREFIX/bin/clang++" >> $GITHUB_ENV
             echo "FC=$CONDA_PREFIX/bin/gfortran" >> $GITHUB_ENV
             echo "COMPILER_LIB_SEARCH_PATH=$CONDA_PREFIX/lib" >> $GITHUB_ENV
        shell: bash -el {0}
